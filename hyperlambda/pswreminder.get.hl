//Generate password reset token and send email
.arguments
   email:string

// Validate email exists
data.connect:fakebook
   data.read
      table:users
      where
         and
            email.eq:x:@.arguments/*/email

   // Check if user exists
   if
      not-null:x:@data.read/**
      .lambda
         // Generate a secure random token
         crypto.random
            length:48
         set-value:x:@crypto.random
            strings.replace:x:@crypto.random
               .:/
               .:-

         // Calculate expiration (1 hour from now)
         math.add
            date.now
            time
               hours:1


         // Store token in dedicated table
         data.connect:fakebook
            data.create
               table:password_reset_tokens
               values
                  token:x:@crypto.random
                  email:x:@.arguments/*/email
                  expires:x:@math.add
         
         // Construct reset link
         strings.concat
            .:"https://alexerdei73.github.io/pswreminder?token="
            get-value:x:@crypto.random
         .url:x:-

         // Add the link to the text
         strings.concat
            .:@"Please click the following link to reset your password. This link will expire in 1 hour.

         "
            .url:x:@.url

         // Send email with reset link
         unwrap:x:./*/mail.smtp.send/**
         mail.smtp.send
            message
               to
                  .
                     name:
                     email:x:@.arguments/*/email
               subject:Password Reset Request
               entity:text/plain
                  content:x:@strings.concat

         // Return success response
         return-value:Password reset link sent

   else
      // User not found
      throw:Email not found in system
         status:404
         public:true
         field:email