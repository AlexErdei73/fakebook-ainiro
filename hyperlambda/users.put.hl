
// Update one record in your users table in your fakebook database
.arguments

   // user_id column value being primary key of record to update, mandatory argument
   user_id:string

   // email column's new value
   email:string

   // firstname column's new value
   firstname:string

   // lastname column's new value
   lastname:string

   // password_hash column's new value
   password_hash:string

   // backgroundPictureURL column's new value
   backgroundPictureURL:string

   // profilePictureURL column's new value
   profilePictureURL:string

   // photos column's new value
   photos:string

   // posts column's new value
   posts:string

   // isOnline column's new value
   isOnline:int

// Meta data description for endpoint
.description:Update one record in your users table in your fakebook database

// Type of endpoint
.type:crud-update

// Columns with custom handling as we generate a frontend
.handling
   email:email

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/user_id

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest

// Opening up our database connection.
data.connect:[generic|fakebook]
   database-type:sqlite

   // Parametrising our invocation.
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]

   // Invoking our update slot.
   data.update
      database-type:sqlite
      table:users
      values
      where
         and

   // Verifying record exists.
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found

   // Returning the correct status code.
   response.status.set:202

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:fakebook.users.put
      roles:guest
      args

   // Returning success to caller.
   unwrap:x:+/*
   return
      affected:x:@data.update
